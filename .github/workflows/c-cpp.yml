name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Compile main.c
      run: gcc -o main main.c

    - name: Run Expect script
      run: echo "7\n" | ./main

    - name: Create Release and Upload Asset
      run: |
        RELEASE_ID=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"tag_name": "v1.0", "target_commitish": "main", "name": "Release v1.0", "draft": false, "prerelease": false}' \
          "https://api.github.com/repos/${{ github.repository }}/releases" | jq -r '.id')

        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @main \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=main"

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      run: |
        upload_url=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" \
          | jq -r '.upload_url' | cut -d "{" -f 1)
        upload_url="${upload_url}?name=main"
        
        curl -X POST -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @main "$upload_url"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: ${{ steps.create_release.outputs.release_id }}

        curl -X POST -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @main "$upload_url"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: ${{ steps.create_release.outputs.release_id }}
